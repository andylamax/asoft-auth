buildscript {
    ext {
        ktor_version = "1.1.1"
        kotlin_version = "1.3.20-eap-52"
    }
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-noarg:1.3.11"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.20-eap-52'
    id 'java'
}

apply plugin: 'kotlinx-serialization'
apply plugin: 'application'
apply plugin: "org.jetbrains.kotlin.plugin.noarg"

group 'com.asofttz'
version '0.0.0'
mainClassName = "io.ktor.server.netty.EngineMain"

jar {
    manifest {
        attributes 'Main-Class': "io.ktor.server.netty.EngineMain"
    }
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
}

noArg {
    annotation("org.neo4j.ogm.annotation.NodeEntity")
    annotation("org.neo4j.ogm.annotation.RelationshipEntity")
}

sourceSets {
    main.kotlin.srcDirs += "src/main/kotlin"
    test.kotlin.srcDirs += "src/test/kotlin"
    main.resources.srcDirs = ['src/main/resources']
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    maven { url 'https://kotlin.bintray.com/ktor' }
    maven { url 'https://kotlin.bintray.com/kotlin-js-wrappers' }
    maven { url "https://kotlin.bintray.com/kotlinx" }
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "ch.qos.logback:logback-classic:$logback_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-html-builder:$ktor_version"
    implementation project(":asoft-logging:asoft-logging-lib")
    implementation project(":asoft-rx")
    implementation project(":asoft-auth:asoft-auth-lib")
    runtime "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.9.1"
    implementation "io.ktor:ktor-gson:$ktor_version"
    implementation "io.ktor:ktor-client-core:$ktor_version"
    implementation "io.ktor:ktor-client-json-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-core-jvm:$ktor_version"
    implementation "io.ktor:ktor-client-apache:$ktor_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    implementation "org.neo4j:neo4j-ogm-core:3.2.0-alpha02"
    runtime "org.neo4j:neo4j-ogm-bolt-driver:3.2.0-alpha02"
}

task initDb {
    def dbName = "asoft-auth-testdb"
    def dbPath = file("$project.parent.projectDir.path/asoft-auth-db/$dbName")


    def dockerCommand = "docker run --rm -p 9011:7474 -p 9012:7687 "
    dockerCommand += "-v $dbPath/data:/data -v $dbPath/logs:/logs "
    dockerCommand += "--name $dbName neo4j:3.5.1"

    doLast {
        println("Running: $dockerCommand")
        exec {
            commandLine("gnome-terminal", "--geometry=35x8", "-e", dockerCommand)
        }
    }
}